add_test([=[Player_functionality.newplayer]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=Player_functionality.newplayer]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Player_functionality.newplayer]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ValidOrigin.test_origin_boolean]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=ValidOrigin.test_origin_boolean]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ValidOrigin.test_origin_boolean]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ValidOrigin.test_origin_for_player2]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=ValidOrigin.test_origin_for_player2]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ValidOrigin.test_origin_for_player2]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ValidOrigin.gameboard_with_no_pieces]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=ValidOrigin.gameboard_with_no_pieces]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ValidOrigin.gameboard_with_no_pieces]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ValidOrigin.test_p2_first_origin]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=ValidOrigin.test_p2_first_origin]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ValidOrigin.test_p2_first_origin]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ValidDestination.with_friendly_piece]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=ValidDestination.with_friendly_piece]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ValidDestination.with_friendly_piece]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ValidDestination.with_no_piece]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=ValidDestination.with_no_piece]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ValidDestination.with_no_piece]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[ValidDestination.with_enemy_blockade]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=ValidDestination.with_enemy_blockade]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[ValidDestination.with_enemy_blockade]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CapturePiece.singleBlotIsTakenAndJailed_via_tryMove]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=CapturePiece.singleBlotIsTakenAndJailed_via_tryMove]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CapturePiece.singleBlotIsTakenAndJailed_via_tryMove]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CapturePiece.cannotCaptureTwoOrMore_via_tryMove]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=CapturePiece.cannotCaptureTwoOrMore_via_tryMove]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CapturePiece.cannotCaptureTwoOrMore_via_tryMove]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[CapturePiece.invalidOrigin_with_jailed_piece_via_tryMove]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=CapturePiece.invalidOrigin_with_jailed_piece_via_tryMove]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[CapturePiece.invalidOrigin_with_jailed_piece_via_tryMove]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TryMove.FreesJailedPieceAndPlacesOnBoard]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=TryMove.FreesJailedPieceAndPlacesOnBoard]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TryMove.FreesJailedPieceAndPlacesOnBoard]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TryMove.RejectsNonZeroOriginWhenJailed]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=TryMove.RejectsNonZeroOriginWhenJailed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TryMove.RejectsNonZeroOriginWhenJailed]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[TryMove.NormalMoveWhenNoJail]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=TryMove.NormalMoveWhenNoJail]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[TryMove.NormalMoveWhenNoJail]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[GameOver.detects_winner]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=GameOver.detects_winner]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[GameOver.detects_winner]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[GameOver.DetectsPlayer1Winner]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=GameOver.DetectsPlayer1Winner]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[GameOver.DetectsPlayer1Winner]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[GameOver.DetectsPlayer2Winner]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=GameOver.DetectsPlayer2Winner]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[GameOver.DetectsPlayer2Winner]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FreeingPiece.CannotFreeWhenNotInHomeOrJailed]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=FreeingPiece.CannotFreeWhenNotInHomeOrJailed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FreeingPiece.CannotFreeWhenNotInHomeOrJailed]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[FreeingPiece.CanFreeWhenEligible]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=FreeingPiece.CanFreeWhenEligible]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[FreeingPiece.CanFreeWhenEligible]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalMoves.InitialP1Die1]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalMoves.InitialP1Die1]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalMoves.InitialP1Die1]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalMoves.InitialP2Die1]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalMoves.InitialP2Die1]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalMoves.InitialP2Die1]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalMoves.P1Die5Blocked]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalMoves.P1Die5Blocked]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalMoves.P1Die5Blocked]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalMoves.JailedP1NoMoveIfBlocked]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalMoves.JailedP1NoMoveIfBlocked]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalMoves.JailedP1NoMoveIfBlocked]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalMoves.JailedP1BarExit]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalMoves.JailedP1BarExit]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalMoves.JailedP1BarExit]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalTurnSeq.NonDoublesP1]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalTurnSeq.NonDoublesP1]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalTurnSeq.NonDoublesP1]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalTurnSeq.NonDoublesP2]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalTurnSeq.NonDoublesP2]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalTurnSeq.NonDoublesP2]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalTurnSeq.DoublesP1]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalTurnSeq.DoublesP1]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalTurnSeq.DoublesP1]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LegalTurnSeq.Immutability]=]  /Users/romanos/Backgammon_Engine/build/backgammon_tests [==[--gtest_filter=LegalTurnSeq.Immutability]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LegalTurnSeq.Immutability]=]  PROPERTIES WORKING_DIRECTORY /Users/romanos/Backgammon_Engine/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  backgammon_tests_TESTS Player_functionality.newplayer ValidOrigin.test_origin_boolean ValidOrigin.test_origin_for_player2 ValidOrigin.gameboard_with_no_pieces ValidOrigin.test_p2_first_origin ValidDestination.with_friendly_piece ValidDestination.with_no_piece ValidDestination.with_enemy_blockade CapturePiece.singleBlotIsTakenAndJailed_via_tryMove CapturePiece.cannotCaptureTwoOrMore_via_tryMove CapturePiece.invalidOrigin_with_jailed_piece_via_tryMove TryMove.FreesJailedPieceAndPlacesOnBoard TryMove.RejectsNonZeroOriginWhenJailed TryMove.NormalMoveWhenNoJail GameOver.detects_winner GameOver.DetectsPlayer1Winner GameOver.DetectsPlayer2Winner FreeingPiece.CannotFreeWhenNotInHomeOrJailed FreeingPiece.CanFreeWhenEligible LegalMoves.InitialP1Die1 LegalMoves.InitialP2Die1 LegalMoves.P1Die5Blocked LegalMoves.JailedP1NoMoveIfBlocked LegalMoves.JailedP1BarExit LegalTurnSeq.NonDoublesP1 LegalTurnSeq.NonDoublesP2 LegalTurnSeq.DoublesP1 LegalTurnSeq.Immutability)
